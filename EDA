import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sns
import psycopg2

def load_data():
    load_option = input("Enter 'file' to load data from CSV or 'manual' to enter data manually: ").lower()

    if load_option == 'file':
        file_path = input("Enter the path to the CSV file: ")
        df = pd.read_csv(file_path)
    elif load_option == 'manual':
        # Take user input for data
        row_ids = list(map(int, input("Enter Row IDs (comma-separated): ").split(',')))
        order_ids = list(map(int, input("Enter Order IDs (comma-separated): ").split(',')))
        # Continue taking input for other columns

        # Create a DataFrame
        data = {
            'Row_ID': row_ids,
            'Order_ID': order_ids,
            # Continue adding other columns
        }

        df = pd.DataFrame(data)
    else:
        print("Invalid input. Please enter 'file' or 'manual'.")
        return None

    return df

def main():
    # Take user input for database connection
    db_host = input("Enter PostgreSQL database host: ")
    db_port = input("Enter PostgreSQL database port: ")
    db_name = input("Enter PostgreSQL database name: ")
    db_user = input("Enter PostgreSQL database user: ")
    db_password = input("Enter PostgreSQL database password: ")

    # Establish a connection to the PostgreSQL database
    conn = psycopg2.connect(
        host=db_host,
        port=db_port,
        database=db_name,
        user=db_user,
        password=db_password
    )

    # Create a cursor object to execute SQL queries
    cursor = conn.cursor()

    # Load data
    df = load_data()

    if df is not None:
        # Convert Order_Date to datetime
        df['Order_Date'] = pd.to_datetime(df['Order_Date'])

        # Insert data into the PostgreSQL table
        for _, row in df.iterrows():
            cursor.execute("""
                INSERT INTO your_table_name ("Row_ID", "Order_ID", "Order_Date", "Ship_Mode", "Customer_ID", "Segment", "Country", "City", "State", "Postal_Code", "Region", "Product_ID", "Category", "Sub_Category", "Product_Name", "Sales", "Quantity", "Discount", "Profit")
                VALUES (%s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s)
            """, tuple(row))

        # Commit the changes to the database
        conn.commit()

        # Analyze customer behavior
        customer_behavior = df.groupby('Customer_ID')['Order_Amount'].sum().reset_index()

        # Visualize customer behavior
        plt.figure(figsize=(8, 6))
        sns.barplot(x='Customer_ID', y='Order_Amount', data=customer_behavior)
        plt.title('Customer Behavior')
        plt.xlabel('Customer ID')
        plt.ylabel('Total Order Amount')
        plt.show()

        # Analyze popular product categories
        product_category_counts = df['Product_Category'].value_counts()

        # Visualize popular product categories
        plt.figure(figsize=(8, 6))
        product_category_counts.plot(kind='bar')
        plt.title('Popular Product Categories')
        plt.xlabel('Product Category')
        plt.ylabel('Number of Orders')
        plt.show()

        # Analyze market trends over time
        df['Month'] = df['Order_Date'].dt.month

        # Visualize market trends
        monthly_trends = df.groupby('Month')['Order_Amount'].sum().reset_index()

        plt.figure(figsize=(8, 6))
        sns.lineplot(x='Month', y='Order_Amount', data=monthly_trends, marker='o')
        plt.title('Monthly Market Trends')
        plt.xlabel('Month')
        plt.ylabel('Total Order Amount')
        plt.show()

        # Provide strategic recommendations based on the analysis
        print("Strategic Recommendations:")
        print("- Focus on promoting Electronics as it is the most popular product category.")
        print("- Consider offering discounts or promotions during peak months to boost sales.")
        print("- Explore partnerships with beauty brands to expand the Beauty product category.")

    # Close the cursor and connection
    cursor.close()
    conn.close()

# Run the main function
main()

